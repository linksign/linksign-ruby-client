=begin
领签开发平台接口调试工具

\u6B64\u5DE5\u5177\u65E8\u5728\u5E2E\u52A9\u5F00\u53D1\u8005\u68C0\u6D4B\u8C03\u7528\u3010\u9886\u7B7E\u5F00\u53D1\u8005API\u3011\u65F6\u53D1\u9001\u7684\u8BF7\u6C42\u53C2\u6570\u662F\u5426\u6B63\u786E\uFF0C\u63D0\u4EA4\u76F8\u5173\u4FE1\u606F\u540E\u53EF\u83B7\u5F97\u670D\u52A1\u5668\u7684\u9A8C\u8BC1\u7ED3\u679C\u3002

OpenAPI spec version: 1.0.0
Contact: apiteam@linksign.cn
Generated by: https://github.com/swagger-api/swagger-codegen.git

License: Apache 2.0
http://www.apache.org/licenses/LICENSE-2.0.html


=end

require "uri"

module SwaggerClient
  class SealApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # \u521B\u5EFA\u4E00\u4E2A\u5370\u7AE0
    # \u521B\u5EFA\u4E00\u4E2A\u5370\u7AE0
    # @param client_id 
    # @param [Hash] opts the optional parameters
    # @option opts [Seal] :body 
    # @return [SealSummary]
    def create_seal(client_id, opts = {})
      data, status_code, headers = create_seal_with_http_info(client_id, opts)
      return data
    end

    # \u521B\u5EFA\u4E00\u4E2A\u5370\u7AE0
    # \u521B\u5EFA\u4E00\u4E2A\u5370\u7AE0
    # @param client_id 
    # @param [Hash] opts the optional parameters
    # @option opts [Seal] :body 
    # @return [Array<(SealSummary, Fixnum, Hash)>] SealSummary data, response status code and response headers
    def create_seal_with_http_info(client_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: SealApi#create_seal ..."
      end
      
      # verify the required parameter 'client_id' is set
      fail "Missing the required parameter 'client_id' when calling create_seal" if client_id.nil?
      
      # resource path
      local_var_path = "/clients/{clientId}/seals".sub('{format}','json').sub('{' + 'clientId' + '}', client_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      _header_accept = ['application/json']
      _header_accept_result = @api_client.select_header_accept(_header_accept) and header_params['Accept'] = _header_accept_result

      # HTTP header 'Content-Type'
      _header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'body'])
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SealSummary')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: SealApi#create_seal\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # \u83B7\u53D6\u4E00\u4E2A\u5370\u7AE0
    # \u83B7\u53D6\u4E00\u4E2A\u5370\u7AE0
    # @param client_id \u7CFB\u7EDF\u7F16\u53F7
    # @param seal_id \u5370\u7AE0\u7F16\u53F7
    # @param [Hash] opts the optional parameters
    # @return [SealFile]
    def get_seal(client_id, seal_id, opts = {})
      data, status_code, headers = get_seal_with_http_info(client_id, seal_id, opts)
      return data
    end

    # \u83B7\u53D6\u4E00\u4E2A\u5370\u7AE0
    # \u83B7\u53D6\u4E00\u4E2A\u5370\u7AE0
    # @param client_id \u7CFB\u7EDF\u7F16\u53F7
    # @param seal_id \u5370\u7AE0\u7F16\u53F7
    # @param [Hash] opts the optional parameters
    # @return [Array<(SealFile, Fixnum, Hash)>] SealFile data, response status code and response headers
    def get_seal_with_http_info(client_id, seal_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: SealApi#get_seal ..."
      end
      
      # verify the required parameter 'client_id' is set
      fail "Missing the required parameter 'client_id' when calling get_seal" if client_id.nil?
      
      # verify the required parameter 'seal_id' is set
      fail "Missing the required parameter 'seal_id' when calling get_seal" if seal_id.nil?
      
      # resource path
      local_var_path = "/clients/{clientId}/seals/{sealId}".sub('{format}','json').sub('{' + 'clientId' + '}', client_id.to_s).sub('{' + 'sealId' + '}', seal_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      _header_accept = ['application/json']
      _header_accept_result = @api_client.select_header_accept(_header_accept) and header_params['Accept'] = _header_accept_result

      # HTTP header 'Content-Type'
      _header_content_type = []
      header_params['Content-Type'] = @api_client.select_header_content_type(_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SealFile')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: SealApi#get_seal\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
